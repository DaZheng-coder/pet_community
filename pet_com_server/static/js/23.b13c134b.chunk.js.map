{"version":3,"sources":["pages/BuySuccess/index.jsx","api/index.js","api/api.js","components/Button/index.jsx"],"names":["BuySuccess","state","order","localStorageGet","this","setState","newCart","console","log","apiUpdateCartList","user_id","then","res","localStorage","removeItem","className","_id","username","address","note","totalPrice","commodities","map","commodity","index","name","count","parseInt","price","toFixed","onClick","props","history","replace","Component","service","axios","create","baseURL","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","response","code","data","window","alert","msg","apiCategories","get","apiCommodities","category","page","apiCommodity","apiUserDetail","apiUserListSome","apiRegister","body","post","apiUserUpdate","put","apiLogin","apiFollow","app_user_id","follow_user_id","apiCartList","apiCartAddCommodity","apiAddressList","apiAddAddress","apiDeleteAddress","delete","apiAddOrder","apiDynamicCreate","apiDynamicList","apiDynamicGood","dynamic_id","apiDynamicDetail","apiDynamicMyList","apiCommonCreate","apiCommonGood","common_id","apiCommonSecondDetail","apiCommonDelete","apiCommonMyList","Button","handleClick","e","stopPropagation","type","style","title","children"],"mappings":"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","file":"static/js/23.b13c134b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport {localStorageGet} from '@/utils'\r\nimport {apiUpdateCartList} from '@/api/api'\r\nimport Button from '@/components/Button'\r\nimport './index.less'\r\n\r\nexport default class BuySuccess extends Component {\r\n  state = {\r\n    order: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 获取订单信息\r\n    const order = localStorageGet('order')\r\n    this.setState({order})\r\n    // 更新购物车\r\n    const newCart = localStorageGet('newCart')\r\n    console.log('新的购物车猎豹~~~~', newCart)\r\n    apiUpdateCartList(order.user_id, newCart).then(res => console.log('跟新成功', res))\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.removeItem('order')\r\n  }\r\n\r\n  render() {\r\n    const {order} = this.state\r\n    return (\r\n      <div className=\"bg router-view\">\r\n        <div className=\"success-container\">\r\n          <i className=\"margin1-r success-i iconfont icon-icon-60\" />\r\n          <h3>购买成功</h3>\r\n        </div>\r\n        <div className=\"padding1\">\r\n          {\r\n            order && \r\n              <Fragment>\r\n                <div>\r\n                  <span className=\"margin1-r\">订单编号:</span>\r\n                  <span>{order._id}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"margin1-r\">用户名：</span>\r\n                  <span>{order.username}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"margin1-r\">用户id：</span>\r\n                  <span>{order.user_id}</span>\r\n                </div>\r\n                <div>\r\n                <div>\r\n                  <span className=\"margin1-r\">收货地址：</span>\r\n                  <span>{order.address}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"margin1-r\">收货备注：</span>\r\n                  <span>{order.note}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"margin1-r\">实付金额：</span>\r\n                  <span>{order.totalPrice}</span>\r\n                </div>\r\n                  <span className=\"margin1-r\">购物信息:</span>\r\n                  <div className=\"margin1-l\">\r\n                    {\r\n                      order.commodities.map((commodity,index) => \r\n                        <div key={index} className=\"flex space-between\">\r\n                          <span>{commodity.name} x {commodity.count}</span>\r\n                          <span>{(parseInt(commodity.price) * commodity.count).toFixed(2)}</span>\r\n                        </div>)\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n              \r\n          }\r\n        </div>\r\n        <Button onClick={() => this.props.history.replace('/shop')} className=\" margin2-lr\">点击跳转到商城首页</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// 封装axios\r\nimport axios from 'axios'\r\nimport QS from 'qs'\r\nimport {localStorageGet}  from '@/utils'\r\n// import Toast from ''\r\n\r\n//保存环境变量\r\n// const isPrd = process.env.NODE_ENV == 'production';\r\n//区分开发环境还是生产环境基础URL\r\n// export const basicUrl = isPrd ? process.env.REACT_APP_API_URL : 'http://localhost:3001/web/api'\r\nexport const basicUrl = 'http://pet.zhengjunqin.top/web/api'\r\n\r\n// 设置axios基本路径\r\nconst service = axios.create({\r\n  baseURL: basicUrl\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(config => { \r\n  const token = localStorageGet('userToken')\r\n  // 在每次的请求中添加token\r\n  // config.data = Object.assign({}, config.data, {\r\n  //   token: token,\r\n  // })\r\n  if (token) {\r\n    console.log('有token，设置token1', token)\r\n    config.headers.Authorization = 'Bearer ' + token\r\n  }\r\n  // 设置请求头\r\n  // config.headers = {\r\n  //   'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n  // }\r\n  // config.data = QS.stringify(config.data)\r\n  return config\r\n}, error => { \r\n  return Promise.reject(error);\r\n})\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(response => {\r\n  //根据返回不同的状态码做不同的事情\r\n  // 这里一定要和后台开发人员协商好统一的错误状态码\r\n  if (response.code) {\r\n    switch (response.code) {\r\n      case 200:\r\n        return response.data;\r\n      case 401:\r\n        //未登录处理方法\r\n        console.log('用户未登录')\r\n        break;\r\n      case 403:\r\n        //token过期处理方法\r\n        console.log('用户token过期')\r\n        break;\r\n      default:\r\n        // 发送错误消息\r\n        // message.error(response.data.msg)\r\n        window.alert('错误消息', response.data.msg)\r\n        console.log('错误消息', response.data.msg)\r\n    }\r\n  } else { \r\n    return response;\r\n  }\r\n})\r\n//最后把封装好的axios导出\r\nexport default service\r\n","// 统一管理接口\r\nimport service from './index'\r\n\r\n// 获取上级分类为商品的分类\r\nexport const apiCategories = () => service.get('/categories/commodity')\r\n// 获取上级分类为category的商品列表\r\nexport const apiCommodities = (category,page) => service.get(`/commodities/${category}/${page}`)\r\n// 根据id获取商品信息\r\nexport const apiCommodity = (_id) => service.get(`/commodity/${_id}`)\r\n\r\n// 获取用户详细信息\r\nexport const apiUserDetail = (user_id) => service.get(`/user/detail/${user_id}`)\r\n// 获取一些用户\r\nexport const apiUserListSome = () => service.get('/user/list/some')\r\n// 注册用户\r\nexport const apiRegister = (body) => service.post('/register', body)\r\n// 更新用户信息\r\nexport const apiUserUpdate = (user_id,body) => service.put(`/user/update/${user_id}`, body)\r\n// 登录\r\nexport const apiLogin = (body) => service.post('/login', body)\r\n// 查看是否有用户名\r\nexport const apiIsExistUsername = (body) => service.get('/isExistUsername', body)\r\n// 关注\r\nexport const apiFollow = (app_user_id, follow_user_id) => service.get(`/user/follow/add/${app_user_id}/${follow_user_id}`)\r\n\r\n// 获取购物车列表，传入的id是用户id\r\nexport const apiCartList = (_id) => service.get(`/cart/list/${_id}`)\r\n// 更新购物车列表，传入的id是用户id\r\nexport const apiUpdateCartList = (_id,body) => service.put(`/cart/list/update/${_id}`, body)\r\n// 将商品添加到购物车列表，id为用户id，body传入商品_id\r\nexport const apiCartAddCommodity = (_id, body) => service.post(`/cart/list/add/${_id}`, body)\r\n\r\n// 获取地址列表 id为用户id\r\nexport const apiAddressList = (_id) => service.get(`/address/list/${_id}`)\r\n// 添加地址\r\nexport const apiAddAddress = (body) => service.post('/address/create', body)\r\n// 删除地址，传入的是地址的id\r\nexport const apiDeleteAddress = (_id) => service.delete(`address/delete/${_id}`)\r\n\r\n// 获取订单列表，id为用户id\r\nexport const apiOrderList = (_id) => service.get(`/order/list/${_id}`)\r\n// 创建添加订单\r\nexport const apiAddOrder = (body) => service.post('/order/create', body)\r\n\r\n// 创建动态\r\nexport const apiDynamicCreate = (body) => service.post('/dynamic/create', body)\r\n// 获取动态列表，body为查询条件\r\nexport const apiDynamicList = (page) => service.get(`/dynamic/list/${page}`)\r\n// 更新动态点赞\r\nexport const apiDynamicGood = (dynamic_id, user_id) => service.get(`/dynamic/good/${dynamic_id}/${user_id}`)\r\n// 获取单个动态的详细信息\r\nexport const apiDynamicDetail = (dynamic_id) => service.get(`/dynamic/detail/${dynamic_id}`)\r\n// 获取个人动态列表\r\nexport const apiDynamicMyList = (user_id) => service.get(`dynamic/my/list/${user_id}`)\r\n\r\n// 创建评论\r\nexport const apiCommonCreate = (body) => service.post('/common/create', body)\r\n// 评论点赞\r\nexport const apiCommonGood = (user_id, common_id) => service.get(`/common/good/${user_id}/${common_id}`)\r\n// 获取次级评论详情\r\nexport const apiCommonSecondDetail = (common_id) => service.get(`/common/second/detail/${common_id}`)\r\n// 删除评论\r\nexport const apiCommonDelete = (common_id) => service.delete(`/common/delete/${common_id}`)\r\n// 获取个人发布的评论列表\r\nexport const apiCommonMyList = (user_id) => service.get(`/common/my/list/${user_id}`)\r\n\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default class Button extends Component {\r\n  handleClick = (e) => {\r\n    e.stopPropagation()\r\n    if (this.props.type !== 'useless') {\r\n      this.props.onClick(e)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div \r\n        onClick={this.handleClick} \r\n        style={this.props.style}\r\n        className={`my-button ${this.props.type || 'default'} ${this.props.className}`}\r\n      >{this.props.title || this.props.children}</div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}