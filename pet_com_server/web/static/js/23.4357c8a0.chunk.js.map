{"version":3,"sources":["pages/User/index.jsx","../node_modules/nanoid/index.browser.js","components/HandleBar/index.jsx"],"names":["User","state","user","handleBtnClick","props","delete_user","setState","history","replace","Toast","success","localStorageGet","this","_id","console","log","className","leftSlot","rightSlot","onClick","push","url","avatar","username","iconClass","title","type","Component","connect","withRouter","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","HandleBar","click","centerSlot"],"mappings":"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","file":"static/js/23.4357c8a0.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport HandleBar from \"@/components/HandleBar\"\r\nimport NavBar from '@/components/NavBar'\r\nimport Avatar from '@/components/Avatar'\r\nimport Button from '@/components/Button'\r\nimport './index.less'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Toast from '@/components/Toast'\r\nimport {localStorageGet} from '@/utils'\r\nimport {delete_user} from '@/redux/action/user'\r\nclass User extends Component {\r\n  state = {\r\n    user: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = localStorageGet('user') || this.props.user\r\n    if (user._id) {  \r\n      this.setState({user: user})\r\n    } \r\n  }\r\n\r\n  // 退出账号\r\n  handleBtnClick = () => {\r\n    this.props.delete_user()\r\n    this.setState({user: null})\r\n    this.props.history.replace('/community')\r\n    Toast.success('退出成功', 1000)\r\n  }\r\n\r\n  render() {\r\n    const {user} = this.state\r\n    console.log('user', user)\r\n    return (\r\n      <div className=\"router-view\">\r\n        <NavBar leftSlot={false} rightSlot={\r\n          <div className=\"flex\">\r\n            <i className=\"margin1-lr iconfont icon-icon-13\" />\r\n            <i onClick={() => this.props.history.push('/userSetting')} className=\"margin1-lr iconfont icon-icon-120\" />\r\n          </div>\r\n        }/>\r\n        <div className=\"user-container bg padding1-lr\">\r\n          <div className=\"flex padding1-tb\">\r\n            <div className=\"margin1-r\">{user && <Avatar user={true} url={user.avatar}/>}</div>\r\n            <div className=\"flex flex-column\">\r\n              {\r\n                user ? <Fragment>\r\n                  <span className=\"font3 font-bolder\">{user.username}</span>\r\n                  <span className=\"font1 font-deep-gray\">用户id：{user._id}</span>\r\n                </Fragment> : <Fragment>\r\n                  <span className=\"font3\">用户未登录，点击登录</span>\r\n                </Fragment>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"padding1-tb\">\r\n            <div className=\"padding1-tb\"><span className=\"font3 font-bolder\">更多</span></div>\r\n            <div className=\"flex user-container-handle\">\r\n              <div onClick={() => this.props.history.push('/myCommon')} className=\"user-container-handle-item flex flex-column\">\r\n                <i className=\"iconfont icon-icon-5\" />\r\n                <span className=\"font-deep-gray\">评论</span>\r\n              </div>\r\n              {/* <div className=\"user-container-handle-item flex flex-column\">\r\n                <i className=\"iconfont icon-icon-42\" />\r\n                <span className=\"font-deep-gray\">我的赞</span>\r\n              </div> */}\r\n              <div onClick={() => this.props.history.push('/myDynamic')} className=\"user-container-handle-item flex flex-column\">\r\n                <i className=\"iconfont icon-icon-16\" />\r\n                <span className=\"font-deep-gray\">我的动态</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"user-container-img flex-center padding1-tb\">\r\n          <img src=\"https://iconfont.alicdn.com/t/d19c38ab-7cb5-4e52-a709-2f19dbd6fece.png\" alt=\"广告图片\"/>\r\n        </div> */}\r\n        <div className=\"margin1-t bg padding1-lr\">\r\n          <div className=\"padding05-tb\"><span className=\"font3 font-bold\">常用功能</span></div>\r\n          <div>\r\n            <HandleBar iconClass=\"icon-icon-132\" title=\"共享账号\"/>\r\n            <HandleBar iconClass=\"icon-icon-31\" title=\"联系我们\"/>\r\n            <HandleBar iconClass=\"icon-icon-81\" title=\"分享给好友\"/>\r\n            <HandleBar iconClass=\"icon-icon-122\" title=\"去评分\"/>\r\n            <HandleBar iconClass=\"icon-icon-75\" title=\"意见反馈\"/>\r\n            <HandleBar iconClass=\"icon-icon-94\" title=\"用户协议\"/>\r\n            <HandleBar iconClass=\"icon-icon-83\" title=\"隐私协议\"/>\r\n            <HandleBar iconClass=\"icon-icon-130\" title=\"注销账号\"/>\r\n          </div>\r\n        </div>\r\n        <Button type=\"danger\" onClick={this.handleBtnClick} className=\"margin1 user-setting-btn\" title=\"退出账号\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {delete_user}\r\n)(withRouter(User))","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default class HandleBar extends Component {\r\n  render() {\r\n    const {iconClass, title} = this.props\r\n    return (\r\n      <div onClick={this.props.click || null} className={`bg flex padding1 ${this.props.className || ''}`}>\r\n        <div className=\"margin1-r\">\r\n          {this.props.leftSlot || <i className={`iconfont ${iconClass}`} />}\r\n        </div>\r\n        <div className=\"font2 flex1\">\r\n          {this.props.centerSlot || <span>{title}</span>}\r\n        </div>\r\n        <div className=\"hb-icon flex\">{this.props.rightSlot || ''}<i onClick={this.props.click} className=\"iconfont icon-icon-64\" /></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}