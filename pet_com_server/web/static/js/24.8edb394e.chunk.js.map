{"version":3,"sources":["pages/MyDynamic/index.jsx","api/api.js","components/NavBar/index.jsx","api/index.js"],"names":["MyDynamic","state","dynamicList","apiDynamicMyList","this","props","app_user","_id","then","res","console","log","title","Component","connect","user","apiCategories","service","get","apiCommodities","category","page","apiCommodity","apiUserDetail","user_id","apiUserListSome","apiRegister","body","post","apiUserUpdate","put","apiLogin","apiFollow","app_user_id","follow_user_id","apiCartList","apiUpdateCartList","apiCartAddCommodity","apiAddressList","apiAddAddress","apiDeleteAddress","delete","apiAddOrder","apiDynamicCreate","apiDynamicList","apiDynamicGood","dynamic_id","apiDynamicDetail","apiCommonCreate","apiCommonGood","common_id","apiCommonSecondDetail","apiCommonDelete","apiCommonMyList","NavBar","height","navbar","clientHeight","setState","getHeight","style","ref","dom","backgroundColor","bgColor","top","className","noSticky","leftSlot","color","onClick","history","goBack","centerSlot","rightSlot","withRouter","basicUrl","axios","create","baseURL","interceptors","request","use","config","token","localStorageGet","headers","Authorization","error","Promise","reject","response","code","data","window","alert","msg"],"mappings":"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","file":"static/js/24.8edb394e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport NavBar from '@/components/NavBar'\r\nimport {apiDynamicMyList} from '@/api/api'\r\nimport './index.less'\r\n\r\nclass MyDynamic extends Component {\r\n\r\n  state = {\r\n    dynamicList:[]\r\n  }\r\n\r\n  componentDidMount () {\r\n    apiDynamicMyList(this.props.app_user._id).then(res => {\r\n      console.log('获取动态列表成功', res)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar title=\"我的动态\"/>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(state => ({app_user: state.user}))(MyDynamic)\r\n","// 统一管理接口\r\nimport service from './index'\r\n\r\n// 获取上级分类为商品的分类\r\nexport const apiCategories = () => service.get('/categories/commodity')\r\n// 获取上级分类为category的商品列表\r\nexport const apiCommodities = (category,page) => service.get(`/commodities/${category}/${page}`)\r\n// 根据id获取商品信息\r\nexport const apiCommodity = (_id) => service.get(`/commodity/${_id}`)\r\n\r\n// 获取用户详细信息\r\nexport const apiUserDetail = (user_id) => service.get(`/user/detail/${user_id}`)\r\n// 获取一些用户\r\nexport const apiUserListSome = () => service.get('/user/list/some')\r\n// 注册用户\r\nexport const apiRegister = (body) => service.post('/register', body)\r\n// 更新用户信息\r\nexport const apiUserUpdate = (user_id,body) => service.put(`/user/update/${user_id}`, body)\r\n// 登录\r\nexport const apiLogin = (body) => service.post('/login', body)\r\n// 查看是否有用户名\r\nexport const apiIsExistUsername = (body) => service.get('/isExistUsername', body)\r\n// 关注\r\nexport const apiFollow = (app_user_id, follow_user_id) => service.get(`/user/follow/add/${app_user_id}/${follow_user_id}`)\r\n\r\n// 获取购物车列表，传入的id是用户id\r\nexport const apiCartList = (_id) => service.get(`/cart/list/${_id}`)\r\n// 更新购物车列表，传入的id是用户id\r\nexport const apiUpdateCartList = (_id,body) => service.put(`/cart/list/update/${_id}`, body)\r\n// 将商品添加到购物车列表，id为用户id，body传入商品_id\r\nexport const apiCartAddCommodity = (_id, body) => service.post(`/cart/list/add/${_id}`, body)\r\n\r\n// 获取地址列表 id为用户id\r\nexport const apiAddressList = (_id) => service.get(`/address/list/${_id}`)\r\n// 添加地址\r\nexport const apiAddAddress = (body) => service.post('/address/create', body)\r\n// 删除地址，传入的是地址的id\r\nexport const apiDeleteAddress = (_id) => service.delete(`address/delete/${_id}`)\r\n\r\n// 获取订单列表，id为用户id\r\nexport const apiOrderList = (_id) => service.get(`/order/list/${_id}`)\r\n// 创建添加订单\r\nexport const apiAddOrder = (body) => service.post('/order/create', body)\r\n\r\n// 创建动态\r\nexport const apiDynamicCreate = (body) => service.post('/dynamic/create', body)\r\n// 获取动态列表，body为查询条件\r\nexport const apiDynamicList = (page) => service.get(`/dynamic/list/${page}`)\r\n// 更新动态点赞\r\nexport const apiDynamicGood = (dynamic_id, user_id) => service.get(`/dynamic/good/${dynamic_id}/${user_id}`)\r\n// 获取单个动态的详细信息\r\nexport const apiDynamicDetail = (dynamic_id) => service.get(`/dynamic/detail/${dynamic_id}`)\r\n// 获取个人动态列表\r\nexport const apiDynamicMyList = (user_id) => service.get(`dynamic/my/list/${user_id}`)\r\n\r\n// 创建评论\r\nexport const apiCommonCreate = (body) => service.post('/common/create', body)\r\n// 评论点赞\r\nexport const apiCommonGood = (user_id, common_id) => service.get(`/common/good/${user_id}/${common_id}`)\r\n// 获取次级评论详情\r\nexport const apiCommonSecondDetail = (common_id) => service.get(`/common/second/detail/${common_id}`)\r\n// 删除评论\r\nexport const apiCommonDelete = (common_id) => service.delete(`/common/delete/${common_id}`)\r\n// 获取个人发布的评论列表\r\nexport const apiCommonMyList = (user_id) => service.get(`/common/my/list/${user_id}`)\r\n\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport './index.less'\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    height: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    const height = this.navbar.clientHeight\r\n    this.setState({height})\r\n    // 如果父元素想获取该组件的高度，就发送给他\r\n    this.props.getHeight && this.props.getHeight(height)\r\n  }\r\n\r\n  render() {\r\n    console.log('this.props.style', this.props.style)\r\n    return (\r\n      <div ref={dom => this.navbar = dom} style={this.props.style || {backgroundColor: this.props.bgColor || '#FFF', top: 0}} className={`navbar-container padding1 flex ${this.props.className} ${this.props.noSticky || 'sticky'}`}>\r\n        <div>\r\n          {(typeof this.props.leftSlot === 'boolean' ) || this.props.leftSlot || <i className=\"iconfont icon-icon-63 line-center\" style={{color: this.props.color}} onClick={() => this.props.history.goBack()} />}\r\n        </div>\r\n        <div className=\"flex1 text-center margin1-lr\">\r\n          {this.props.centerSlot || <span className=\"font3 font-bold\" style={{color: this.props.color}}>{this.props.title}</span>}\r\n        </div>\r\n        <div className=\"navbar-container-right\">\r\n          {this.props.rightSlot || ''}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(NavBar)","// 封装axios\r\nimport axios from 'axios'\r\nimport QS from 'qs'\r\nimport {localStorageGet}  from '@/utils'\r\n// import Toast from ''\r\n\r\n//保存环境变量\r\n// const isPrd = process.env.NODE_ENV == 'production';\r\n//区分开发环境还是生产环境基础URL\r\n// export const basicUrl = isPrd ? process.env.REACT_APP_API_URL : 'http://localhost:3001/web/api'\r\nexport const basicUrl = 'http://pet.zhengjunqin.top/web/api'\r\n\r\n// 设置axios基本路径\r\nconst service = axios.create({\r\n  baseURL: basicUrl\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(config => { \r\n  const token = localStorageGet('userToken')\r\n  // 在每次的请求中添加token\r\n  // config.data = Object.assign({}, config.data, {\r\n  //   token: token,\r\n  // })\r\n  if (token) {\r\n    console.log('有token，设置token1', token)\r\n    config.headers.Authorization = 'Bearer ' + token\r\n  }\r\n  // 设置请求头\r\n  // config.headers = {\r\n  //   'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n  // }\r\n  // config.data = QS.stringify(config.data)\r\n  return config\r\n}, error => { \r\n  return Promise.reject(error);\r\n})\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(response => {\r\n  //根据返回不同的状态码做不同的事情\r\n  // 这里一定要和后台开发人员协商好统一的错误状态码\r\n  if (response.code) {\r\n    switch (response.code) {\r\n      case 200:\r\n        return response.data;\r\n      case 401:\r\n        //未登录处理方法\r\n        console.log('用户未登录')\r\n        break;\r\n      case 403:\r\n        //token过期处理方法\r\n        console.log('用户token过期')\r\n        break;\r\n      default:\r\n        // 发送错误消息\r\n        // message.error(response.data.msg)\r\n        window.alert('错误消息', response.data.msg)\r\n        console.log('错误消息', response.data.msg)\r\n    }\r\n  } else { \r\n    return response;\r\n  }\r\n})\r\n//最后把封装好的axios导出\r\nexport default service\r\n"],"sourceRoot":""}