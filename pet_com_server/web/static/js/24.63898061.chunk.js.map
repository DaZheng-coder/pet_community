{"version":3,"sources":["pages/Login/index.jsx","api/index.js","api/api.js","components/InputItem/index.jsx"],"names":["Login","state","formData","username","password","handleLogin","e","stopPropagation","user","value","apiLogin","then","res","props","set_user","data","localStorageSet","token","Toast","success","PubSub","publish","history","replace","className","noSticky","rightSlot","onClick","push","refFun","c","title","placeholder","type","this","Component","connect","withRouter","basicUrl","process","REACT_APP_API_URL","service","axios","create","baseURL","interceptors","request","use","config","localStorageGet","console","log","headers","Authorization","error","Promise","reject","response","code","window","alert","msg","apiCategories","get","apiCommodities","category","page","apiCommodity","_id","apiUserDetail","user_id","apiUserListSome","apiRegister","body","post","apiUserUpdate","put","apiFollow","app_user_id","follow_user_id","apiCartList","apiUpdateCartList","apiCartAddCommodity","apiAddressList","apiAddAddress","apiDeleteAddress","delete","apiAddOrder","apiDynamicCreate","apiDynamicList","apiDynamicGood","dynamic_id","apiDynamicDetail","apiDynamicMyList","apiCommonCreate","apiCommonGood","common_id","apiCommonSecondDetail","apiCommonDelete","apiCommonMyList","InputItem","onBlur","ref","wrongMessage"],"mappings":"6RAaMA,E,4MACJC,MAAQ,CACNC,SAAU,CACRC,SAAU,KACVC,SAAU,O,EAIdC,YAAc,SAACC,GACbA,EAAEC,kBACF,IAAMC,EAAO,CACXL,SAAU,EAAKA,SAASM,MACxBL,SAAU,EAAKA,SAASK,OAE1BC,YAASF,GAAMG,MAAK,SAAAC,GAClB,EAAKC,MAAMC,SAASF,EAAIG,KAAKP,MAC7BQ,YAAgB,YAAaJ,EAAIG,KAAKE,OACtCC,IAAMC,QAAQ,2BAAQ,KACtBC,IAAOC,QAAQ,oBAAqB,WACpC,EAAKR,MAAMS,QAAQC,QAAQ,kB,uDAIrB,IAAD,OACP,OACE,sBAAKC,UAAU,kBAAf,UACE,cAAC,IAAD,CAAQC,UAAQ,EAACC,UAAW,sBAAMC,QAAS,kBAAM,EAAKd,MAAMS,QAAQM,KAAK,cAA7C,4BAC5B,sBAAKJ,UAAU,WAAf,UACE,0DACA,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAWK,OAAQ,SAAAC,GAAC,OAAI,EAAK3B,SAAW2B,GAAGC,MAAM,qBAAMC,YAAY,yCACnE,cAAC,IAAD,CAAWH,OAAQ,SAAAC,GAAC,OAAI,EAAK1B,SAAW0B,GAAGC,MAAM,eAAKC,YAAY,iCAAQC,KAAK,gBAEjF,cAAC,IAAD,CAAQN,QAASO,KAAK7B,YAAa4B,KAAK,SAAST,UAAU,sBAA3D,oC,GAjCUW,aAwCLC,uBACb,SAAAnC,GAAK,MAAK,CAACO,KAAMP,EAAMO,QACvB,CAACM,cAFYsB,CAGbC,YAAWrC,K,y7BChDAsC,EAAmBC,mIAAYC,kBAGtCC,EAAUC,IAAMC,OAAO,CAC3BC,QAASN,IAIXG,EAAQI,aAAaC,QAAQC,KAAI,SAAAC,GAC/B,IAAM/B,EAAQgC,YAAgB,aAc9B,OATIhC,IACFiC,QAAQC,IAAI,sCAAmBlC,GAC/B+B,EAAOI,QAAQC,cAAgB,UAAYpC,GAOtC+B,KACN,SAAAM,GACD,OAAOC,QAAQC,OAAOF,MAIxBb,EAAQI,aAAaY,SAASV,KAAI,SAAAU,GAGhC,IAAIA,EAASC,KAmBX,OAAOD,EAlBP,OAAQA,EAASC,MACf,KAAK,IACH,OAAOD,EAAS1C,KAClB,KAAK,IAEHmC,QAAQC,IAAI,kCACZ,MACF,KAAK,IAEHD,QAAQC,IAAI,iCACZ,MACF,QAGEQ,OAAOC,MAAM,2BAAQH,EAAS1C,KAAK8C,KACnCX,QAAQC,IAAI,2BAAQM,EAAS1C,KAAK8C,SAO3BpB,QC3DFqB,EAAgB,kBAAMrB,EAAQsB,IAAI,0BAElCC,EAAiB,SAACC,EAASC,GAAV,OAAmBzB,EAAQsB,IAAR,uBAA4BE,EAA5B,YAAwCC,KAE5EC,EAAe,SAACC,GAAD,OAAS3B,EAAQsB,IAAR,qBAA0BK,KAGlDC,EAAgB,SAACC,GAAD,OAAa7B,EAAQsB,IAAR,uBAA4BO,KAEzDC,EAAkB,kBAAM9B,EAAQsB,IAAI,oBAEpCS,EAAc,SAACC,GAAD,OAAUhC,EAAQiC,KAAK,YAAaD,IAElDE,EAAgB,SAACL,EAAQG,GAAT,OAAkBhC,EAAQmC,IAAR,uBAA4BN,GAAWG,IAEzE/D,EAAW,SAAC+D,GAAD,OAAUhC,EAAQiC,KAAK,SAAUD,IAI5CI,EAAY,SAACC,EAAaC,GAAd,OAAiCtC,EAAQsB,IAAR,2BAAgCe,EAAhC,YAA+CC,KAG5FC,EAAc,SAACZ,GAAD,OAAS3B,EAAQsB,IAAR,qBAA0BK,KAEjDa,EAAoB,SAACb,EAAIK,GAAL,OAAchC,EAAQmC,IAAR,4BAAiCR,GAAOK,IAE1ES,EAAsB,SAACd,EAAKK,GAAN,OAAehC,EAAQiC,KAAR,yBAA+BN,GAAOK,IAG3EU,EAAiB,SAACf,GAAD,OAAS3B,EAAQsB,IAAR,wBAA6BK,KAEvDgB,EAAgB,SAACX,GAAD,OAAUhC,EAAQiC,KAAK,kBAAmBD,IAE1DY,EAAmB,SAACjB,GAAD,OAAS3B,EAAQ6C,OAAR,yBAAiClB,KAK7DmB,EAAc,SAACd,GAAD,OAAUhC,EAAQiC,KAAK,gBAAiBD,IAGtDe,EAAmB,SAACf,GAAD,OAAUhC,EAAQiC,KAAK,kBAAmBD,IAE7DgB,EAAiB,SAACvB,GAAD,OAAUzB,EAAQsB,IAAR,wBAA6BG,KAExDwB,EAAiB,SAACC,EAAYrB,GAAb,OAAyB7B,EAAQsB,IAAR,wBAA6B4B,EAA7B,YAA2CrB,KAErFsB,EAAmB,SAACD,GAAD,OAAgBlD,EAAQsB,IAAR,0BAA+B4B,KAElEE,EAAmB,SAACvB,GAAD,OAAa7B,EAAQsB,IAAR,0BAA+BO,KAG/DwB,EAAkB,SAACrB,GAAD,OAAUhC,EAAQiC,KAAK,iBAAkBD,IAE3DsB,EAAgB,SAACzB,EAAS0B,GAAV,OAAwBvD,EAAQsB,IAAR,uBAA4BO,EAA5B,YAAuC0B,KAE/EC,EAAwB,SAACD,GAAD,OAAevD,EAAQsB,IAAR,gCAAqCiC,KAE5EE,EAAkB,SAACF,GAAD,OAAevD,EAAQ6C,OAAR,yBAAiCU,KAElEG,EAAkB,SAAC7B,GAAD,OAAa7B,EAAQsB,IAAR,0BAA+BO,M,mHC7DtD8B,G,6KAIT,IAAD,EACoClE,KAAKrB,MAAzCkB,EADA,EACAA,MAAOC,EADP,EACOA,YAAaC,EADpB,EACoBA,KAAMJ,EAD1B,EAC0BA,OACjC,OACE,sBAAKL,UAAU,mBAAf,UACE,+BAAOO,IACP,sBAAKP,UAAU,yBAAf,UACE,uBAAO6E,OAAQnE,KAAKrB,MAAMwF,OAAQC,IAAKzE,EAAQI,KAAMA,GAAQ,OAAQD,YAAaA,IAClF,sBAAMR,UAAU,iCAAhB,SAAkDU,KAAKrB,MAAM0F,yB,GAXhCpE,e","file":"static/js/24.63898061.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.less'\r\nimport NavBar from '@/components/NavBar'\r\nimport InputItem from '@/components/InputItem'\r\nimport Button from '@/components/Button'\r\nimport Toast from '@/components/Toast'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {apiLogin} from '@/api/api'\r\nimport {connect} from 'react-redux'\r\nimport PubSub from 'pubsub-js'\r\nimport {set_user} from '@/redux/action/user'\r\nimport {localStorageSet} from '@/utils'\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    formData: {\r\n      username: null,\r\n      password: null\r\n    }\r\n  }\r\n\r\n  handleLogin = (e) => {\r\n    e.stopPropagation()\r\n    const user = {\r\n      username: this.username.value,\r\n      password: this.password.value\r\n    }\r\n    apiLogin(user).then(res => {\r\n      this.props.set_user(res.data.user)\r\n      localStorageSet(\"userToken\", res.data.token)\r\n      Toast.success('登录成功', 2000)\r\n      PubSub.publish('updateDynamicList', 'restart')\r\n      this.props.history.replace('/community')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <NavBar noSticky rightSlot={<span onClick={() => this.props.history.push('/register')}>注册</span>}/>\r\n        <div className=\"padding1\">\r\n          <h3>账号登录</h3>\r\n          <div className=\"margin1-t\">\r\n            <InputItem refFun={c => this.username = c} title=\"用户名\" placeholder=\"请输入用户名\"/>\r\n            <InputItem refFun={c => this.password = c} title=\"密码\" placeholder=\"请输入密码\" type=\"password\"/>\r\n          </div>\r\n          <Button onClick={this.handleLogin} type=\"danger\" className=\"login-container-btn\" >登录</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {set_user}\r\n)(withRouter(Login))","// 封装axios\r\nimport axios from 'axios'\r\nimport QS from 'qs'\r\nimport {localStorageGet}  from '@/utils'\r\n\r\n//保存环境变量\r\nconst isPrd = process.env.NODE_ENV == 'production';\r\n//区分开发环境还是生产环境基础URL\r\nexport const basicUrl = isPrd ? process.env.REACT_APP_API_URL : 'http://localhost:3000/web/api'\r\n\r\n// 设置axios基本路径\r\nconst service = axios.create({\r\n  baseURL: basicUrl\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(config => { \r\n  const token = localStorageGet('userToken')\r\n  // 在每次的请求中添加token\r\n  // config.data = Object.assign({}, config.data, {\r\n  //   token: token,\r\n  // })\r\n  if (token) {\r\n    console.log('有token，设置token1', token)\r\n    config.headers.Authorization = 'Bearer ' + token\r\n  }\r\n  // 设置请求头\r\n  // config.headers = {\r\n  //   'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n  // }\r\n  // config.data = QS.stringify(config.data)\r\n  return config\r\n}, error => { \r\n  return Promise.reject(error);\r\n})\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(response => {\r\n  //根据返回不同的状态码做不同的事情\r\n  // 这里一定要和后台开发人员协商好统一的错误状态码\r\n  if (response.code) {\r\n    switch (response.code) {\r\n      case 200:\r\n        return response.data;\r\n      case 401:\r\n        //未登录处理方法\r\n        console.log('用户未登录')\r\n        break;\r\n      case 403:\r\n        //token过期处理方法\r\n        console.log('用户token过期')\r\n        break;\r\n      default:\r\n        // 发送错误消息\r\n        // message.error(response.data.msg)\r\n        window.alert('错误消息', response.data.msg)\r\n        console.log('错误消息', response.data.msg)\r\n    }\r\n  } else { \r\n    return response;\r\n  }\r\n})\r\n//最后把封装好的axios导出\r\nexport default service\r\n","// 统一管理接口\r\nimport service from './index'\r\n\r\n// 获取上级分类为商品的分类\r\nexport const apiCategories = () => service.get('/categories/commodity')\r\n// 获取上级分类为category的商品列表\r\nexport const apiCommodities = (category,page) => service.get(`/commodities/${category}/${page}`)\r\n// 根据id获取商品信息\r\nexport const apiCommodity = (_id) => service.get(`/commodity/${_id}`)\r\n\r\n// 获取用户详细信息\r\nexport const apiUserDetail = (user_id) => service.get(`/user/detail/${user_id}`)\r\n// 获取一些用户\r\nexport const apiUserListSome = () => service.get('/user/list/some')\r\n// 注册用户\r\nexport const apiRegister = (body) => service.post('/register', body)\r\n// 更新用户信息\r\nexport const apiUserUpdate = (user_id,body) => service.put(`/user/update/${user_id}`, body)\r\n// 登录\r\nexport const apiLogin = (body) => service.post('/login', body)\r\n// 查看是否有用户名\r\nexport const apiIsExistUsername = (body) => service.get('/isExistUsername', body)\r\n// 关注\r\nexport const apiFollow = (app_user_id, follow_user_id) => service.get(`/user/follow/add/${app_user_id}/${follow_user_id}`)\r\n\r\n// 获取购物车列表，传入的id是用户id\r\nexport const apiCartList = (_id) => service.get(`/cart/list/${_id}`)\r\n// 更新购物车列表，传入的id是用户id\r\nexport const apiUpdateCartList = (_id,body) => service.put(`/cart/list/update/${_id}`, body)\r\n// 将商品添加到购物车列表，id为用户id，body传入商品_id\r\nexport const apiCartAddCommodity = (_id, body) => service.post(`/cart/list/add/${_id}`, body)\r\n\r\n// 获取地址列表 id为用户id\r\nexport const apiAddressList = (_id) => service.get(`/address/list/${_id}`)\r\n// 添加地址\r\nexport const apiAddAddress = (body) => service.post('/address/create', body)\r\n// 删除地址，传入的是地址的id\r\nexport const apiDeleteAddress = (_id) => service.delete(`address/delete/${_id}`)\r\n\r\n// 获取订单列表，id为用户id\r\nexport const apiOrderList = (_id) => service.get(`/order/list/${_id}`)\r\n// 创建添加订单\r\nexport const apiAddOrder = (body) => service.post('/order/create', body)\r\n\r\n// 创建动态\r\nexport const apiDynamicCreate = (body) => service.post('/dynamic/create', body)\r\n// 获取动态列表，body为查询条件\r\nexport const apiDynamicList = (page) => service.get(`/dynamic/list/${page}`)\r\n// 更新动态点赞\r\nexport const apiDynamicGood = (dynamic_id, user_id) => service.get(`/dynamic/good/${dynamic_id}/${user_id}`)\r\n// 获取单个动态的详细信息\r\nexport const apiDynamicDetail = (dynamic_id) => service.get(`/dynamic/detail/${dynamic_id}`)\r\n// 获取个人动态列表\r\nexport const apiDynamicMyList = (user_id) => service.get(`dynamic/my/list/${user_id}`)\r\n\r\n// 创建评论\r\nexport const apiCommonCreate = (body) => service.post('/common/create', body)\r\n// 评论点赞\r\nexport const apiCommonGood = (user_id, common_id) => service.get(`/common/good/${user_id}/${common_id}`)\r\n// 获取次级评论详情\r\nexport const apiCommonSecondDetail = (common_id) => service.get(`/common/second/detail/${common_id}`)\r\n// 删除评论\r\nexport const apiCommonDelete = (common_id) => service.delete(`/common/delete/${common_id}`)\r\n// 获取个人发布的评论列表\r\nexport const apiCommonMyList = (user_id) => service.get(`/common/my/list/${user_id}`)\r\n\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default class InputItem extends Component {\r\n  \r\n\r\n\r\n  render() {\r\n    const {title, placeholder, type, refFun} = this.props\r\n    return (\r\n      <div className=\"login-input-item\">\r\n        <span>{title}</span>\r\n        <div className=\"login-input-item-wrong\">\r\n          <input onBlur={this.props.onBlur} ref={refFun} type={type || 'text'} placeholder={placeholder}  />\r\n          <span className=\"login-input-item-wrong-message\">{this.props.wrongMessage}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}